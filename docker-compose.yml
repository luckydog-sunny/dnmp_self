services:
  mine:
    build:
      context: ./services/mine
      args:
        MINE_VERSION : ${MINE_VERSION}
    # platform: linux/arm64
    ports:
      - "${MINE_PORT_9000}:9000"
      - "${MINE_PORT_9501}:9501"
      - "${MINE_PORT_9502}:9502"
    user: root
    privileged: true
    volumes:
      - ${SOURCE_DIR}:/opt/www:rw
    environment:
      - APP_ENV=dev
      - SCAN_CACHEABLE=false
    cap_add:
      - SYS_PTRACE
    restart: always
    entrypoint: ["php", "/opt/www/bin/hyperf.php", "start"]
    tty: true
    networks:
      - default


  # php82:
  #   build:
  #     context: ./services/php82
  #     args:
  #       PHP82_VERSION: ${PHP82_VERSION}
  #       PHP82_EXTENSIONS: ${PHP82_EXTENSIONS}
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #   ports:
  #     - "${PHP82_PORT_9000}:9000"
  #     - "${PHP82_PORT_9501}:9501"
  #     - "${PHP82_PORT_9502}:9502"
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - ${PHP82_SSL_DIR}:/data/cert:ro
  #     - ${PHP82_INI_FILE}:/usr/local/etc/php/php.ini:ro
  #     - ${PHP82_FPM_CONF_FILE}:/usr/local/etc/php-fpm.conf:ro
  #     - ${PHP82_LOG_DIR}:/var/log/php
  #     - ${PHP82_SSH_DIR}:/home/www/.ssh:ro
  #   restart: always
  #   command: php-fpm
  #   cap_add:
  #     - SYS_PTRACE
  #   networks:
  #     - default

  nginx:
     build:
       context: ./services/nginx
       args:
         NGINX_VERSION: ${NGINX_VERSION}
     volumes:
       - ./services/certbot/letsencrypt:/etc/letsencrypt
       - ${SOURCE_DIR}:/www/:rw
       - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
       - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
       - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
       - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
       - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params.conf:ro
       - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
     ports:
       - "${NGINX_HTTP_HOST_PORT}:80"
       - "${NGINX_HTTPS_HOST_PORT}:443"
     restart: always
     command: nginx -g 'daemon off;'
     networks:
       - default

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./services/certbot/letsencrypt:/etc/letsencrypt
      - ${SOURCE_DIR}:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot/calculatorxoffcial --email 943891935@qq.com --agree-tos --no-eff-email -d calculatorx.top -d www.calculatorx.top --force-renewal  && certbot certonly --webroot -w /var/www/certbot/calculatorxoffcial/h5 --email 943891935@qq.com --agree-tos --no-eff-email -d h5.calculatorx.top --force-renewal  && certbot certonly --webroot -w /var/www/certbot/calculatorxadmin --email 943891935@qq.com --agree-tos --no-eff-email -d api.calculatorx.top --renew-by-default --non-interactive --force-renewal ; sleep 12h & wait $${!}; done;'"
    command: renew


  mysql8:
     build:
       context: ./services/mysql8
       args:
         MYSQL8_VERSION: ${MYSQL8_VERSION}
     ports:
       - "${MYSQL8_HOST_PORT}:3306"
     volumes:
       - ${MYSQL8_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
       - ${DATA_DIR}/mysql8:/var/lib/mysql/:rw
       - ${MYSQL8_LOG_DIR}:/var/log/mysql/:rw
     environment:
       MYSQL_ROOT_PASSWORD: "${MYSQL8_ROOT_PASSWORD}"
       MYSQL_ROOT_HOST: "${MYSQL8_ROOT_HOST}"
       TZ: "$TZ"
     restart: always
     command: "--character-set-server=utf8mb4"
     networks:
       - default

  redis-db:
     build:
       context: ./services/redis
       args:
         REDIS_VERSION: ${REDIS_VERSION}
     ports:
       - "${REDIS_HOST_PORT}:6379"
     restart: always
     networks:
       - default

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
      #config:
      #  - subnet: 10.0.0.0/24